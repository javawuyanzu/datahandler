"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StringHashMap = /** @class */ (function () {
    function StringHashMap() {
        this.map = {};
    }
    StringHashMap.prototype.addItem = function (key, value) {
        this.map[key] = value;
    };
    StringHashMap.prototype.getItem = function (key) {
        return this.map[key];
    };
    Object.defineProperty(StringHashMap.prototype, "count", {
        get: function () {
            var i = 0;
            this.each(function () {
                i++;
            });
            return i;
        },
        enumerable: true,
        configurable: true
    });
    StringHashMap.prototype.each = function (func) {
        for (var key in this.map) {
            func(key, this.map[key]);
        }
    };
    StringHashMap.prototype.containsKey = function (key) {
        return this.map[key] ? true : false;
    };
    StringHashMap.prototype.remove = function (key) {
        delete this.map[key];
    };
    StringHashMap.prototype.clear = function () {
        this.map = {};
    };
    return StringHashMap;
}());
exports.StringHashMap = StringHashMap;
var StringSet = /** @class */ (function () {
    function StringSet() {
        this.map = new StringHashMap();
    }
    StringSet.prototype.add = function (item) {
        this.map.addItem(item, item);
    };
    StringSet.prototype.remove = function (item) {
        this.map.remove(item);
    };
    StringSet.prototype.has = function (item) {
        return this.map.containsKey(item);
    };
    StringSet.prototype.clear = function () {
        this.map = new StringHashMap();
    };
    return StringSet;
}());
exports.StringSet = StringSet;
